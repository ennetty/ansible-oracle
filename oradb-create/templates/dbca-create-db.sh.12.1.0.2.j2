#!/bin/sh

ORACLE_BASE={{ oracle_base }}
ORACLE_SID={{ item.0.oracle_db_name }}
ORACLE_HOME={{ item.0.oracle_home }}
ORATAB=/etc/oratab

echo "Check for entry in "$ORATAB

grep ^$ORACLE_SID":" $ORATAB > /dev/null && exit 0

OLD_UMASK=`umask`
umask 0027
mkdir -p $ORACLE_BASE/audit 2>/dev/null
mkdir -p $ORACLE_BASE/admin/$ORACLE_SID/adump 2>/dev/null
mkdir -p $ORACLE_BASE/admin/$ORACLE_SID/dpdump 2>/dev/null
mkdir -p $ORACLE_BASE/admin/$ORACLE_SID/pfile 2>/dev/null
mkdir -p $ORACLE_BASE/admin/$ORACLE_SID/scripts 2>/dev/null
mkdir -p $ORACLE_BASE/admin/$ORACLE_SID/ 2>/dev/null

mkdir -p $ORACLE_BASE/oracle/cfgtoollogs/dbca/$ORACLE_SID 2>/dev/null
umask ${OLD_UMASK}

PERL5LIB=$ORACLE_HOME/rdbms/admin:$PERL5LIB; export PERL5LIB
export ORACLE_SID ORACLE_HOME

export PATH=$ORACLE_HOME/perl/bin:$PATH
PATH=$ORACLE_HOME/bin:$PATH; export PATH

$ORACLE_HOME/bin/orapwd file=$ORACLE_HOME/dbs/orapw$ORACLE_SID force=y format=12 password={{ item.0.oracle_db_passwd }}

#  /u01/app/oracle/12.1.0.2/grid/bin/setasmgidwrap o=/u01/app/oracle/product/12.1.0.2/dbhome_1/bin/oracle

$ORACLE_HOME/bin/sqlplus /nolog @{{ oracle_rsp_stage }}/{{ oracle_create_db_sql }}
retcode=$?
if [ $retcode -ne 0 ] ; then
    exit $retcode
fi

{% if oracle_install_option_gi == 'HA_CONFIG' %}
$ORACLE_HOME/bin/srvctl add database -d $ORACLE_SID -o $ORACLE_HOME -n orcl -p +{{ oracle_dbf_dir_asm }}/$ORACLE_SID/spfile$ORACLE_SID.ora
$ORACLE_HOME/bin/srvctl enable database -d $ORACLE_SID
$ORACLE_HOME/bin/srvctl stop  database -d $ORACLE_SID
$ORACLE_HOME/bin/srvctl start database -d $ORACLE_SID
$ORACLE_HOME/bin/srvctl config database -d $ORACLE_SID
{% else %}
# check against an existing entry was done at the beginning of this script!
echo $ORACLE_SID":"$ORACLE_HOME":N" >> $ORAZAB
{% endif %}

